% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/sim_ddpcr_bkm.R
\name{sim_ddpcr_bkm}
\alias{sim_ddpcr_bkm}
\title{Simulate Droplet Digital PCR}
\usage{
sim_ddpcr_bkm(m, n = 20000L, mexp = TRUE, n_exp = 8L, pos_sums = FALSE,
  fluo = NULL, sddropc = 0, mudropr = 1, sddropr = 0, Pvar = TRUE,
  piperr = 0, dropsd = 0, falpos = 0, falneg = 0, rain = 0)
}
\arguments{
\item{m}{is either the concentration of templates molecules in the raw sample
(copies/microliter)
or the expected number of template molecules per droplet.
See \code{mexp} parameter for details
Must be a (vector of) positive integers.}

\item{n}{the expected number of droplets per experiment. Must be a positive integer.
Default 20000 based on the Bio-Rad ddPCR QX100 theoretical expected values}

\item{mexp}{If \code{TRUE}, m is the expected number of template molecules per droplet
If \code{FALSE}, m is the concentration of the raw sample
Default \code{TRUE} as in Jacobs et al.}

\item{n_exp}{the number of experiments that are simulated by the function for each given
\code{m}.
Default 8 for eight replicates for each given \code{m} as in Jacobs et al. 2014}

\item{pos_sums}{if \code{TRUE}, function returns only the total number and
the number of positive (containing at least one molecule) droplets per well.
If \code{FALSE}, the function returns a vector of length equal to the number
of droplets. Each element of the vector represents whether the given droplet
contained at least one target molecule or was void of target molecules.}

\item{fluo}{if \code{NULL}, the function calculates total number of positive droplets.
If \code{TRUE}, the function returns the florescence intensities of all droplets
If a positive real number, the function returns the full fluorescence curve
with the given number the expected space between two consecutive measured droplets.
Values between 10-20 give nice results
Default \code{NULL} to mimic automatic commercial output.}

\item{sddropc}{standard deviation of the number of droplets generated
Must be a real number between 0 and \code{n} divided by 10.
Default 0 for constant number of droplets}

\item{mudropr}{average proportion (between 0 and 1) of retained partitions
Must be a real number between 0 and 1
Default 1 for no loss}

\item{sddropr}{relative standard deviation of the proportion of retained partitions
Must be a real number, preferably close to 0.
Default 0 for a constant loss}

\item{Pvar}{If \code{TRUE}, number of copies in constant volume follows P(c) distribution
If \code{FALSE},  number of copies in constant volume is constant
Default \code{TRUE} for the realistic Poisson model.}

\item{piperr}{coefficient of variation of the actual pipetted volume from the raw material.
Must be a positive real number, preferably close to 0 (0.1 = 10% is very large).
Default 0 for constant volume equal to the expected volume}

\item{dropsd}{relative variability of the droplet volume
parameter sigma of a lognormal distribution with mu = 0
Must be a positive real number, preferably close to 0.
Default 0 for constant droplet size}

\item{falpos}{probability that a partition containing no copy gives a positive result
Must be a real number between 0 and 1
Default 0 for no false positives
Only used with \code{fluo} is \code{NULL}}

\item{falneg}{probability that a partition containing at least one copy gives a negative
result
Must be a real number between 0 and 1
Default 0 for no false negatives
Only used with \code{fluo} is \code{NULL}}

\item{rain}{parameter that defines how much inhibition is enforced on positive droplets.
Must be a real number between 0 and 1 with 0 no rain, 1 positive droplets follow same
distribution as negative droplets
Default 0 for no rain
Not used with \code{fluo} is \code{NULL}}
}
\description{
Simulates results of a droplet digital PCR.
}
\details{
sim_ddpcr_bkm is based on the R code from Jacobs et al. (2014) (see references).
}
\examples{
\dontrun{
# no parameters, no replicates, one given concentration
test1 <- sim_ddpcr_bkm(0.5, n_exp = 1, seed = 1)
str(test1)
-log(1-test1[[1]][1]/test1[[1]][2])
# changed parameters, no replicates, one given concentration
test2 <- sim_ddpcr_bkm(0.5, n_exp = 1, seed = 2, sddropc = 500, mudropr = 0.7,
                       sddropr = 0.1, Pvar = TRUE, piperr = 0.02, dropsd = 0.2,
                       falpos = 0.001, falneg = 0.01)
str(test2)
-log(1-test2[[1]][1]/test2[[1]][2])
# changed parameters, no replicates, one given concentration
# output all droplets and their peak fluorescence
test3 <- sim_ddpcr_bkm(0.5, n_exp = 1, seed = 3, pos_sums = TRUE, fluo = TRUE,
                       sddropc = 500, mudropr = 0.7, sddropr = 0.1, Pvar = TRUE,
                       piperr = 0.02, dropsd = 0.2, falpos = 0.001, falneg = 0.01)
str(test3)
-log(1-sum(test3[[1]])/length(test3[[1]]))
plot(density(test3[[2]])) # not logical: falpos & falneg do not influence distribution

# output only number of positive droplet, but also their fluorescence
test3b <- sim_ddpcr_bkm(0.5, n_exp = 1, seed = 3, pos_sums = FALSE, fluo = TRUE,
                        sddropc = 500, mudropr = 0.7, sddropr = 0.1, Pvar = TRUE,
                        piperr = 0.02, dropsd = 0.2, falpos = 0.001, falneg = 0.01)
str(test3b)

# changed parameters, no replicates, one given concentration
# output all droplets and the full fluorescence (huge, length about 128 800)
# becomes somewhat slower (16 seconds on my relatively slow computer)
system.time(test4 <- sim_ddpcr_bkm(0.5, n_exp = 1, seed = 4, pos_sums = TRUE, fluo = 10, sddropc = 500,
                                   mudropr = 0.7, sddropr = 0.1, Pvar = TRUE, piperr = 0.02,
                                   dropsd = 0.2, rain = 0.1))
str(test4)
-log(1-sum(test4[[1]])/length(test4[[1]]))
par(mar = rep(0,4))
par(mfrow = c(10,1))
x <- 12880
for(i in 1:10){
  plot(test4[[2]][((i-1)*x+1):(i*x)], type = "l", xaxt = "n")}
par(mfrow = c(1,1))
# better zoom in and plot less
par(mfrow = c(10,1))
x <- 250
for(i in 11:20){
  plot(test4[[2]][((i-1)*x+1):(i*x)], type = "l", xaxt = "n")}
par(mfrow = c(1,1))

# 8 replicates, one given concentration
# output all droplets and peak fluorescence
system.time(test5 <- sim_ddpcr_bkm(0.5, n_exp = 8, seed = 5, pos_sums = TRUE, fluo = TRUE,
                                   sddropc = 500, mudropr = 0.7, sddropr = 0.1, Pvar = TRUE,
                                   piperr = 0.02, dropsd = 0.2, falpos = 0.001, falneg = 0.01))
str(test5)
conc <- NULL
for(i in 1:8){
  conc <- c(conc, -log(1-sum(test5[[2*i-1]])/length(test5[[2*i-1]])))}
conc
# 8 replicates, several concentrations
# output all droplets and peak fluorescence
# higher concentrations (and more droplets) take more time.
# This set-up took about 1 minute on my computer
system.time(test6 <- sim_ddpcr_bkm(exp(-4:1), n_exp = 8, seed = 6, pos_sums = TRUE, fluo = TRUE,
                                   sddropc = 500, mudropr = 0.7, sddropr = 0.1, Pvar = TRUE,
                                   piperr = 0.02, dropsd = 0.2, falpos = 0.001, falneg = 0.01))
str(test6)
conc <- NULL
for(j in 1:6){
  conct <- NULL
  for(i in 1:8){
    conct <- c(conct, -log(1-sum(test6[[16*(j-1)+2*i-1]])/length(test6[[16*(j-1)+2*i-1]])))
  }
  conc <- cbind(conc, conct)
}
colnames(conc) <- round(exp(-4:1), 3)
conc
}
}
\references{
Jacobs B, Goetghebeur E, Clement L \emph{Impact of variance components on reliability of
absolute quantification using digital PCR} BMC Bioinformatics, 2014.
}

